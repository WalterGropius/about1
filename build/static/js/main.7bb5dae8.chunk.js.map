{"version":3,"sources":["components/shaders/WaterPass.js","state.js","components/Effects.js","components/Text.js","components/Geo.js","App.js","index.js"],"names":["WaterShader","byp","value","tex","type","time","factor","resolution","WaterPass","_Pass","_inherits","_super","_createSuper","dt_size","_this","_classCallCheck","call","uniforms","THREE","clone","undefined","material","vertexShader","fragmentShader","camera","scene","quad","frustumCulled","add","_createClass","key","renderer","writeBuffer","readBuffer","deltaTime","maskActive","Math","max","this","texture","renderToScreen","setRenderTarget","render","clear","Pass","state","top","pages","threshold","mouse","content","tag","text","images","depthbox","depth","color","textColor","image","lines","points","lineWidth","Effects","composer","useRef","water","_useThree","useThree","gl","size","useEffect","current","setSize","width","height","last","index","values","useFrame","abs","normalize","reduce","a","b","length","lerp","autoClear","_jsxs","ref","args","children","_jsx","attachArray","GammaCorrectionShader","extend","EffectComposer","ShaderPass","RenderPass","Text","_ref","bold","_ref$anchorX","anchorX","_ref$anchorY","anchorY","_ref$textAlign","textAlign","props","_objectWithoutProperties","_excluded","reflow","useReflow","TextImpl","_objectSpread","font","onSync","HeightReporter","onReflow","useFlexSize","useLayoutEffect","apply","_toConsumableArray","Page","_ref2","textScaleFactor","_ref2$left","left","textures","useLoader","viewport","boxProps","centerAnchor","grow","marginTop","marginLeft","marginRight","minWidth","minHeight","maxWidth","maxHeight","Box","dir","align","justify","margin","wrap","map","zPosition","adjustedWidth","position","toneMapped","fontSize","lineHeight","letterSpacing","marginBottom","Layercard","_ref3","boxWidth","boxHeight","_useThree2","pageLerp","page","opacity","_Fragment","transparent","Content","_ref4","group","_useThree3","_useAspect","useAspect","_useAspect2","_slicedToArray","bW","bH","vec","y","sticky","set","handleReflow","useCallback","w","h","sizesRef","scale","min","Flex","acc","e","Line","App","scrollArea","onScroll","target","scrollTop","scrollHeight","clientHeight","window","open","_useState","useState","_useState2","setPages","Canvas","shadows","raycaster","enabled","dpr","far","powerPreference","alpha","antialias","stencil","onCreated","_ref5","setClearColor","intensity","OrbitControls","autoRotate","enableZoom","autoRotateSpeed","maxDistance","minDistance","minAzimuthAngle","maxAzimuthAngle","minPolarAngle","maxPolarAngle","castShadow","angle","penumbra","Suspense","fallback","className","onPointerMove","clientX","innerWidth","clientY","innerHeight","style","concat","Loader","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bb5dae8.chunk.js","sourcesContent":["/**  @author vergil Wang */\r\n\r\nimport * as THREE from 'three'\r\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass'\r\n\r\nconst WaterShader = {\r\n  uniforms: {\r\n    byp: { value: 0 },\r\n    tex: { type: 't', value: null },\r\n    time: { type: 'f', value: 0.0 },\r\n    factor: { type: 'f', value: 0.0 },\r\n    resolution: { type: 'v2', value: null },\r\n  },\r\n  vertexShader: `varying vec2 vUv;\r\n    void main(){  \r\n      vUv = uv; \r\n      vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\r\n      gl_Position = projectionMatrix * modelViewPosition;\r\n    }`,\r\n  fragmentShader: `\r\n  uniform int byp;\r\n    uniform float time;\r\n    uniform float factor;\r\n    uniform vec2 resolution;\r\n    uniform sampler2D tex;\r\n    varying vec2 vUv;\r\n    void main() { \r\n      if (byp<1) {\r\n        vec2 uv = vUv;\r\n        float frequency = 4.0;\r\n        float amplitude = 0.015 * factor;\r\n        float x = uv.y * frequency + time * .7; \r\n        float y = uv.x * frequency + time * .3;\r\n        uv.x += .5 * amplitude * cos(x);\r\n        uv.y += .5 * amplitude * sin(y);\r\n        vec4 rgba = texture2D(tex, uv);\r\n        gl_FragColor = rgba;\r\n      } else {\r\n        gl_FragColor = texture2D(tex, vUv);\r\n      }\r\n    }`,\r\n}\r\n\r\nclass WaterPass extends Pass {\r\n  constructor(dt_size) {\r\n    super()\r\n    this.uniforms = THREE.UniformsUtils.clone(WaterShader.uniforms)\r\n    if (dt_size === undefined) dt_size = 64\r\n    this.uniforms['resolution'].value = new THREE.Vector2(dt_size, dt_size)\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: WaterShader.vertexShader,\r\n      fragmentShader: WaterShader.fragmentShader,\r\n    })\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1)\r\n    this.scene = new THREE.Scene()\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null)\r\n    this.quad.frustumCulled = false // Avoid getting clipped\r\n    this.scene.add(this.quad)\r\n    this.factor = 0\r\n    this.time = 0\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\r\n    const factor = Math.max(0, this.factor)\r\n    this.uniforms['byp'].value = factor ? 0 : 1\r\n    this.uniforms['tex'].value = readBuffer.texture\r\n    this.uniforms['time'].value = this.time\r\n    this.uniforms['factor'].value = this.factor\r\n    this.time += 0.01\r\n    this.quad.material = this.material\r\n    if (this.renderToScreen) {\r\n      renderer.setRenderTarget(null)\r\n      renderer.render(this.scene, this.camera)\r\n    } else {\r\n      renderer.setRenderTarget(writeBuffer)\r\n      if (this.clear) renderer.clear()\r\n      renderer.render(this.scene, this.camera)\r\n    }\r\n  }\r\n}\r\n\r\nexport { WaterPass }\r\n","const state = {\r\n  top: 0,\r\n  pages: 0,\r\n  threshold: 4,\r\n  mouse: [0, 0],\r\n  content: [\r\n    {\r\n      tag: 'Umělecká agentura s komplexním portfoliem služeb',\r\n      text: `2media`,\r\n      images: ['/about1/images/2mi01.jpg', '/about1/images/2mi02.jpg', '/about1/images/2mi03.jpg'],\r\n    },\r\n    {\r\n      tag: '     Mediální  a umělecké zastoupení',\r\n      text: `PR,TV,\\nRADIO,\\nAR,AI...`,\r\n      images: ['/about1/images/2mi06.jpg', '/about1/images/2mi05.jpg', '/about1/images/2mi04.jpg'],\r\n    },\r\n    {\r\n      tag: 'Online',\r\n      text: `TikTok,\\n   Facebook,\\nInstagram,\\n      2mag...`,\r\n      images: ['/about1/images/2mi07.jpg', '/about1/images/2mi08.jpg', '/about1/images/2mi09.jpg'],\r\n    },\r\n  ],\r\n  depthbox: [\r\n    {\r\n      depth: 0,\r\n      color: '#FFFFFF',\r\n      textColor: '#ffffff',\r\n      text: 'Poskytujeme servis a zázemí zkušeným i začínajícím umělcům, akcím, projektům, službám, značkám i produktům. ',\r\n      image: '/about1/images/BH41NVu.jpg',\r\n    },\r\n    {\r\n      depth: -5,\r\n      textColor: '#ff00ff',\r\n      text:\r\n        'Zaměřujeme se na kulturu, hudbu,film,divadlo, výtvarné umění, literaturu, tanec,design,lifestyle, módu,kosmetiku, gastronomii, cestování, ekologii...',\r\n      image: '/about1/images/04zTfWB.jpg',\r\n    },\r\n  ],\r\n  lines: [\r\n    {\r\n      points: [\r\n        [-20, 0, 0],\r\n        [-9, 0, 0],\r\n      ],\r\n      color: '#6766B6',\r\n      lineWidth: 3,\r\n    },\r\n    {\r\n      points: [\r\n        [20, 0, 0],\r\n        [9, 0, 0],\r\n      ],\r\n      color: '#6766B6',\r\n      lineWidth: 3,\r\n    },\r\n  ],\r\n}\r\n\r\nexport default state\r\n","import * as THREE from 'three'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { extend, useThree, useFrame } from '@react-three/fiber'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\nimport { GammaCorrectionShader } from 'three/examples/jsm/shaders/GammaCorrectionShader'\r\nimport { WaterPass } from './shaders/WaterPass'\r\nimport state from '../state'\r\n\r\nextend({ EffectComposer, ShaderPass, RenderPass, WaterPass })\r\n\r\nexport default function Effects() {\r\n  const composer = useRef()\r\n  const water = useRef()\r\n  const { gl, size, camera, scene } = useThree()\r\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\r\n  let last = state.top\r\n  let index = 0\r\n  let values = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  useFrame(() => {\r\n    const { top } = state\r\n    values[index] = Math.abs(top - last)\r\n    const normalize = values.reduce((a, b) => a + b) / values.length\r\n    water.current.factor = THREE.MathUtils.lerp(water.current.factor, normalize / 5, 0.01)\r\n    last = top\r\n    index = (index + 1) % 10\r\n    gl.autoClear = true\r\n    composer.current.render()\r\n  }, 1)\r\n  return (\r\n    <effectComposer ref={composer} args={[gl]}>\r\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\r\n      <waterPass attachArray=\"passes\" ref={water} />\r\n      <shaderPass attachArray=\"passes\" args={[GammaCorrectionShader]} />\r\n    </effectComposer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useReflow } from '@react-three/flex'\r\nimport { Text as TextImpl } from '@react-three/drei'\r\n\r\nexport default function Text({ bold = false, anchorX = 'left', anchorY = 'top', textAlign = 'left', ...props }) {\r\n  const reflow = useReflow()\r\n  const font = 'Arial'\r\n  return <TextImpl anchorX={anchorX} anchorY={anchorY} textAlign={textAlign} font={font} onSync={reflow} {...props} />\r\n}\r\n","import * as THREE from 'three'\r\nimport React, { useRef, useState } from 'react'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { MeshDistortMaterial, Shadow } from '@react-three/drei'\r\nimport Text from './Text'\r\n\r\nconst SHAPE_1 = {\r\n  geometry: new THREE.BoxBufferGeometry(1, 1, 1),\r\n  title: '2actors',\r\n  position: [0, -7, -23],\r\n  rotationSpeed: 0.0,\r\n  url: 'http://new.2media.cz/',\r\n  hoveredColor: '#FF0000', // red\r\n}\r\n\r\nconst SHAPE_2 = {\r\n  geometry: new THREE.SphereBufferGeometry(0.5, 32, 42),\r\n  title: '2mag',\r\n  position: [2, -7, -10],\r\n  rotationSpeed: 0.0,\r\n  url: 'https://2market.cz/magazin/',\r\n  hoveredColor: '#00FF00', // green\r\n}\r\n\r\nconst SHAPE_3 = {\r\n  geometry: new THREE.ConeBufferGeometry(0.5, 1, 32),\r\n  title: '2shop',\r\n  position: [5, -7, -13.6],\r\n  rotationSpeed: 0.0,\r\n  url: 'http://2market.cz',\r\n  hoveredColor: '#0000FF', // blue\r\n}\r\n\r\nfunction Model(props) {\r\n  const groupRef = useRef()\r\n  const [hovered, setHovered] = useState(null)\r\n\r\n  useFrame((state, delta) => {\r\n    groupRef.current.children.forEach((child, index) => {\r\n      child.rotation.y += groupRef.current.userData[index].rotationSpeed * delta\r\n      if (hovered === index) {\r\n        child.scale.x = child.scale.y = child.scale.z += delta * 3\r\n        child.scale.x = Math.min(child.scale.x, 1.4) // max scale for x\r\n        child.scale.y = Math.min(child.scale.y, 1.4) // max scale for y\r\n        child.scale.z = Math.min(child.scale.z, 1.4) // max scale for z\r\n      } else {\r\n        child.scale.x = child.scale.y = child.scale.z -= delta * 5\r\n        child.scale.x = Math.max(child.scale.x, 1) // min scale for x\r\n        child.scale.y = Math.max(child.scale.y, 1) // min scale for y\r\n        child.scale.z = Math.max(child.scale.z, 1) // min scale for z\r\n      }\r\n    })\r\n  })\r\n\r\n  return (\r\n    <group {...props} dispose={null} ref={groupRef} userData={[SHAPE_1, SHAPE_2, SHAPE_3]}>\r\n      {[SHAPE_1, SHAPE_2, SHAPE_3].map(({ geometry, title, position, url, hoveredColor }, index) => (\r\n        <group key={title} position={position}>\r\n          <mesh\r\n            geometry={geometry}\r\n            castShadow\r\n            receiveShadow\r\n            onPointerOver={() => setHovered(index)}\r\n            onPointerOut={() => setHovered(null)}\r\n            onClick={() => window.open(url, '_blank')}>\r\n            <MeshDistortMaterial color=\"#ff77ff\" smoothShading roughness={0} metalness={0} factor={0} speed={2} />\r\n          </mesh>\r\n          <mesh geometry={geometry} scale={0.97}>\r\n            <meshBasicMaterial color={'#ff00ff'} roughness={0} />\r\n          </mesh>\r\n          <Text position={[-0.2, 0.3, 1.3]} fontSize={0.4} textAlign={'center'} lineHeight={1} letterSpacing={-0.05} bold color={'#ff00ff'}>\r\n            {title}\r\n          </Text>\r\n          <mesh position={[0, -1, 0]}>\r\n            <Shadow opacity={0.3} rotation-x={-Math.PI / 2} />\r\n          </mesh>\r\n        </group>\r\n      ))}\r\n    </group>\r\n  )\r\n}\r\n\r\nexport default function App() {\r\n  return <Model />\r\n}\r\n","import * as THREE from 'three'\r\nimport React, { Suspense, useEffect, useRef, useState, useCallback, useLayoutEffect } from 'react'\r\nimport { Canvas, useThree, useFrame, useLoader } from '@react-three/fiber'\r\nimport { Flex, Box, useFlexSize } from '@react-three/flex'\r\nimport { Loader, Line, useAspect } from '@react-three/drei'\r\nimport Effects from './components/Effects'\r\nimport Text from './components/Text'\r\nimport Geo from './components/Geo'\r\nimport state from './state'\r\nimport { OrbitControls } from '@react-three/drei'\r\n\r\nfunction HeightReporter({ onReflow }) {\r\n  const size = useFlexSize()\r\n  useLayoutEffect(() => onReflow && onReflow(...size), [onReflow, size])\r\n  return null\r\n}\r\n\r\nfunction Page({ text, tag, images, textScaleFactor, onReflow, left = false }) {\r\n  const textures = useLoader(THREE.TextureLoader, images)\r\n  const { viewport } = useThree()\r\n  const boxProps = {\r\n    centerAnchor: true,\r\n    grow: 1,\r\n    marginTop: 1,\r\n    marginLeft: left * 3,\r\n    marginRight: !left * 3,\r\n    width: 'auto',\r\n    height: 'auto',\r\n    minWidth: 3,\r\n    minHeight: 3,\r\n    maxWidth: 10,\r\n    maxHeight: 6,\r\n  }\r\n  return (\r\n    <Box dir=\"column\" align={left ? 'flex-start' : 'flex-end'} justify=\"flex-start\" width=\"100%\" height=\"auto\" minHeight=\"100%\">\r\n      <HeightReporter onReflow={onReflow} />\r\n      <Box dir=\"row\" width=\"100%\" height=\"auto\" justify={left ? 'flex-end' : 'flex-start'} margin={0} grow={1} wrap=\"wrap\">\r\n        {textures.map((texture, index) => {\r\n          // Calculate the z-coordinate value based on the index or any other logic\r\n          const zPosition = index * -2 + 4\r\n          return (\r\n            <Box key={index} {...boxProps}>\r\n              {(width, height) => {\r\n                const aspectRatio = texture.image.width / texture.image.height\r\n                const adjustedWidth = height * aspectRatio\r\n                return (\r\n                  <mesh position={[0, 0, zPosition]}>\r\n                    <planeBufferGeometry args={[adjustedWidth, height]} />\r\n                    <meshBasicMaterial map={texture} toneMapped={false} />\r\n                  </mesh>\r\n                )\r\n              }}\r\n            </Box>\r\n          )\r\n        })}\r\n      </Box>\r\n      <Box marginLeft={1.5} marginRight={1.5} marginTop={2}>\r\n        <Text position={[left ? 1 : -1, 0.5, 1]} fontSize={textScaleFactor} lineHeight={1} letterSpacing={-0.05} maxWidth={(viewport.width / 4) * 3}>\r\n          {tag}\r\n          <meshBasicMaterial color=\"#6766B6\" toneMapped={false} />\r\n        </Text>\r\n      </Box>\r\n      <Box marginLeft={left ? 1.5 : 1} marginRight={left ? 1 : 1.5} marginBottom={1}>\r\n        <Text\r\n          bold\r\n          position-z={0.5}\r\n          textAlign={left ? 'left' : 'right'}\r\n          fontSize={1.5 * textScaleFactor}\r\n          lineHeight={1}\r\n          letterSpacing={-0.05}\r\n          color=\"#ff00ff\"\r\n          maxWidth={(viewport.width / 4) * 3}>\r\n          {text}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nfunction Layercard({ depth, boxWidth, boxHeight, text, textColor, color, map, textScaleFactor }) {\r\n  const ref = useRef()\r\n  const { viewport, size } = useThree()\r\n  const pageLerp = useRef(state.top / size.height)\r\n  useFrame(() => {\r\n    const page = (pageLerp.current = THREE.MathUtils.lerp(pageLerp.current, state.top / size.height, 0.15))\r\n    if (depth >= 0) ref.current.opacity = page < state.threshold * 1.7 ? 1 : 1 - (page - state.threshold * 1.7)\r\n  })\r\n  return (\r\n    <>\r\n      <mesh position={[boxWidth / 2, -boxHeight / 2, depth]}>\r\n        <planeBufferGeometry args={[boxWidth, boxHeight]} />\r\n        <meshBasicMaterial ref={ref} color={color} map={map} toneMapped={false} transparent opacity={1} />\r\n      </mesh>\r\n      <Text\r\n        bold\r\n        position={[boxWidth / 2, -boxHeight / 2, depth + 1.5]}\r\n        maxWidth={(viewport.width / 4) * 1}\r\n        anchorX=\"center\"\r\n        anchorY=\"middle\"\r\n        fontSize={0.6 * textScaleFactor}\r\n        lineHeight={1}\r\n        letterSpacing={-0.05}\r\n        color={textColor}>\r\n        {text}\r\n      </Text>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Content({ onReflow }) {\r\n  const group = useRef()\r\n  const { viewport, size } = useThree()\r\n  const [bW, bH] = useAspect(1920, 1920, 0.5)\r\n  const texture = useLoader(THREE.TextureLoader, state.depthbox[0].image)\r\n  const vec = new THREE.Vector3()\r\n  const pageLerp = useRef(state.top / size.height)\r\n  useFrame(() => {\r\n    const page = (pageLerp.current = THREE.MathUtils.lerp(pageLerp.current, state.top / size.height, 0.15))\r\n    const y = page * viewport.height\r\n    const sticky = state.threshold * viewport.height\r\n    group.current.position.lerp(vec.set(0, page < state.threshold ? y : sticky, page < state.threshold ? 0 : page * 1.25), 0.15)\r\n  })\r\n  const handleReflow = useCallback((w, h) => onReflow((state.pages = h / viewport.height + 5.5)), [onReflow, viewport.height])\r\n  const sizesRef = useRef([])\r\n  const scale = Math.min(1, viewport.width / 16)\r\n  return (\r\n    <group ref={group}>\r\n      <Flex dir=\"column\" position={[-viewport.width / 2, viewport.height / 2, 0]} size={[viewport.width, viewport.height, 0]} onReflow={handleReflow}>\r\n        {state.content.map((props, index) => (\r\n          <Page\r\n            key={index}\r\n            left={!(index % 2)}\r\n            textScaleFactor={scale}\r\n            onReflow={(w, h) => {\r\n              sizesRef.current[index] = h\r\n              state.threshold = Math.max(4, (4 / (15.8 * 3)) * sizesRef.current.reduce((acc, e) => acc + e, 0))\r\n            }}\r\n            {...props}\r\n          />\r\n        ))}\r\n        <Box dir=\"row\" width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n          <Box centerAnchor>\r\n            {state.lines.map((props, index) => (\r\n              <Line key={index} {...props} />\r\n            ))}\r\n            <Text\r\n              bold\r\n              position-z={0.5}\r\n              anchorX=\"center\"\r\n              anchorY=\"middle\"\r\n              fontSize={1.5 * scale}\r\n              lineHeight={1}\r\n              letterSpacing={-0.05}\r\n              color=\"#6766B6\"\r\n              maxWidth={(viewport.width / 4) * 3}>\r\n              {state.depthbox[0].text}\r\n            </Text>\r\n          </Box>\r\n        </Box>\r\n        <Box dir=\"row\" width=\"100%\" height=\"100%\" align=\"center\" justify=\"center\">\r\n          <Box>\r\n            <Layercard {...state.depthbox[0]} text={state.depthbox[1].text} boxWidth={bW} boxHeight={bH} map={texture} textScaleFactor={scale} />\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    </group>\r\n  )\r\n}\r\n\r\nexport default function App() {\r\n  const scrollArea = useRef()\r\n  const onScroll = (e) => {\r\n    state.top = e.target.scrollTop\r\n    const scrollHeight = e.target.scrollHeight\r\n    const clientHeight = e.target.clientHeight\r\n    if (state.top > 0 && state.top + clientHeight >= scrollHeight) {\r\n      // The user has reached the end of the scrollable area.\r\n      // Open a new window or perform your desired action here.\r\n      window.open('https://4rcwyj-3000.csb.app/', '_parent')\r\n    }\r\n  }\r\n\r\n  useEffect(() => void onScroll({ target: scrollArea.current }), [])\r\n  const [pages, setPages] = useState(0)\r\n  return (\r\n    <>\r\n      <Canvas\r\n        shadows\r\n        raycaster={{ enabled: false }}\r\n        dpr={[1, 2]}\r\n        camera={{ position: [0, 0, 10], far: 1000 }}\r\n        gl={{ powerPreference: 'high-performance', alpha: false, antialias: false, stencil: false, depth: false }}\r\n        onCreated={({ gl }) => gl.setClearColor('#dcdcff')}>\r\n        <pointLight position={[-10, -10, -10]} intensity={1} />\r\n        <ambientLight intensity={0.4} />\r\n        <OrbitControls\r\n          autoRotate\r\n          enableZoom={false}\r\n          autoRotateSpeed={0.01}\r\n          maxDistance={10}\r\n          minDistance={2}\r\n          minAzimuthAngle={6}\r\n          maxAzimuthAngle={7}\r\n          minPolarAngle={0.7}\r\n          maxPolarAngle={1.3}\r\n        />\r\n        <spotLight\r\n          castShadow\r\n          angle={0.3}\r\n          penumbra={1}\r\n          position={[0, 10, 20]}\r\n          intensity={5}\r\n          shadow-mapSize-width={1024}\r\n          shadow-mapSize-height={1024}\r\n        />\r\n        <Suspense fallback={null}>\r\n          <Content onReflow={setPages} />\r\n        </Suspense>\r\n        <Effects />\r\n      </Canvas>\r\n      <div\r\n        className=\"scrollArea\"\r\n        ref={scrollArea}\r\n        onScroll={onScroll}\r\n        onPointerMove={(e) => (state.mouse = [(e.clientX / window.innerWidth) * 2 - 1, (e.clientY / window.innerHeight) * 2 - 1])}>\r\n        <div style={{ height: `${pages * 100}vh` }} />\r\n      </div>\r\n      <Loader />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}